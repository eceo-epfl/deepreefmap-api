name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: psql
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install poetry==1.8.2
          poetry config virtualenvs.create false
          poetry install --no-interaction

      - name: Wait for PostGIS to be ready
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break || sleep 1
          done

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: psql
          DB_NAME: postgres
          DB_PREFIX: postgresql+asyncpg
          S3_URL: https://s3.example.com
          S3_BUCKET_ID: 1234
          S3_ACCESS_KEY: 1234
          S3_SECRET_KEY: 1234
          S3_PREFIX: test-only
          KUBERNETES_SERVICE_HOST: test-only
          KUBERNETES_SERVICE_PORT: 443
          KUBECONFIG: /dev/null
          INCOMPLETE_OBJECT_CHECK_INTERVAL: 120
          INCOMPLETE_OBJECT_TIMEOUT_SECONDS: 900
          DEEPREEFMAP_IMAGE_TAG: 0.1.0
          DEEPREEFMAP_IMAGE: imagename-test
          NAMESPACE: namespace-test
          PROJECT: project-test
